{"attachments":{"img_20200211_091601.jpg":{"type":"sha1","value":"0bc38b4a1c3a50e7b03198be1ea2604067c76b83"},"img_20200211_091621.jpg":{"type":"sha1","value":"74932beed095ff934e0b6ff3b252b6ed7dc6b4eb"}},"cell_type":"markdown","id":"69fd41","input":"#### Question 1\n\nSuppose $f(x,y,z,a,b,c) = \\frac{1}{1+exp(ax + by + cz)}$, where $exp()$ is alternative notation for the exponential function $e^x$.  (This question uses partial derivatives.  If you are unfamiliar with partial derivatives you can watch [this](https://www.khanacademy.org/math/multivariable-calculus/multivariable-derivatives/partial-derivatives/v/partial-derivatives-introduction) short video).\n\n1. What is $\\frac{\\partial f}{\\partial a}$?\n1. If $w = f(x,y,z,a,b,c)$, show that $\\frac{\\partial f}{\\partial a} = xw\\cdot(w-1)$.\n1. Let $\\nabla_{abc} f$ denote the vector $\\langle \\frac{\\partial f}{\\partial a},\\frac{\\partial f}{\\partial b},\\frac{\\partial f}{\\partial c} \\rangle ^ T$. (If you aren't sure what $T$ means, please read [this](https://en.wikipedia.org/wiki/Row_and_column_vectors). By default all our vectors are column vectors.  If you've never encountered the gradient before you can watch [this](https://www.khanacademy.org/math/multivariable-calculus/multivariable-derivatives/gradient-and-directional-derivatives/v/gradient) video.)\n    1. Write an expression for $\\nabla_{abc} f$ by evaluating all the partial derivatives.\n    1. What is $\\nabla_{abc} f$ (as a vector of real numbers) if $x=y=z=a=b=c=1$?\n<img src=\"attachment:img_20200211_091621.jpg\" style=\"max-width:100%\"><img src=\"attachment:img_20200211_091601.jpg\" style=\"max-width:100%\">","pos":2,"type":"cell"}
{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":83705856},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.9"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"7278ff","input":"","pos":6,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"cefdaf","input":"","pos":16,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e94f0c","input":"","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"794027","input":"import string\nimport re\nimport math\nimport numpy as np\nfrom numpy.linalg import inv\n\n\nS = \"\"\"A deep, brutal cold set in across the Midwest on Wednesday, sending temperatures plummeting to depths that stunned even Midwesterners, a group accustomed to shrugging off winter. The cold that seized the middle of the country was the sort that makes cars moan, that makes breathing hurt, that makes any bit of exposed skin sting.\n\nCities like Chicago had been preparing for the deep freeze for days, so when it arrived, much of life had come to a standstill. Colleges and schools were closed all around, and even the United States Postal Service had stopped deliveries in some places. Workers were sent home, meetings canceled, parties called off.\n\nAnd the worst of the blast was still to come: Forecasters said temperatures would drop again after sunset on Wednesday, and that Chicago might even break its record low of minus 27. The outlook for Thursday was different but still grim: slightly warmer temperatures — and snow.\"\"\"\n\nprint(\"Q1: \")\n#Q1 - convert to all lowercase letters\ns1 = S.lower()\nprint(s1)\nprint(\"***************************************************************\")\nprint(\"Q2: \")\n#Q2 - remove all non-alphabetical characters from S1 except for spaces\ns2 = \"\"\npunctuations = '''!()-[][0-9]+{}‒–—―;:'\"\\,<>./?@#$%^&*_~27'''\nemDash ='\\u2014'\nfor i in s1:\n   if i not in punctuations:\n       s2 += i\n# display the unpunctuated string\nprint(s2)\nprint(\"***************************************************************\")\n#Q3 - Use the split() method on s2 to produce a list L of words occurring in S.\nprint(\"Q3: \")\nL=s2.split()\nprint(L)\nprint(\"***************************************************************\")\n#Q4 -By using the python set type, produce a set W of all the unique words occurring in L.\n#What is the ratio of the length of W to the length of L?\nprint(\"Q4: \")\nW = set(L)\nprint(W)\nprint(\"\\n ratio of the length of W: \" + str(len(W)))\nprint(\"\\n ratio of the length of L: \" + str(len(L)))\nprint(\"***************************************************************\")\n#Q5 -Use W to produce a list WS of the words in W occurring in sorted order\nprint(\"Q5: \")\nWS = sorted(W)\nprint(WS)\nprint(\"***************************************************************\")\nprint(\"Q6: \")\n#Q6 - Create a function word_vector(WS,L) that takes WS and L as input \n#     and returns a numpy array N of length len(WS) such that for each i in range(len(WS)), \n#      N[i] is equal to the number of times the word WS[i] occurs in L.\nprint(\"***************************************************************\")\nprint(\"Q7: \")\n#I had help from velko on understand the function\ndef word_vector(a,b):\n    temp=[]\n    for i in range(len(a)):\n        temp.append(b.count(a[i]))\n    N=np.array(temp)\n    return N\n\nNN=word_vector(WS,L)\nMM=word_vector(WS,L)\n\nprint(NN)\n\n\n#Q7 - create a function cos_sim(N,M) that computes the cosine similarity of\n#     two word vectors (two outputs from word_vector called NN and MM).\n\ndef cos_sim(x,y):\n    \n    #multiply vector NN and MM\n    NNMM = np.matmul(x,y)\n    \n    #transpose NNMM\n    \n    NNMMT=NNMM.transpose()\n    \n    #Find magnitude of X and Y\n    magnitudeX=np.linalg.norm(x)\n    magnitudeY=np.linalg.norm(y)\n\n    #Find product of magX and magY\n    mag_XY=magnitudeX*magnitudeY\n    \n    #caculate the cos_sim value \n    cos_sim_Value=np.true_divide(NNMMT, mag_XY)\n    \n    print(cos_sim_Value)\n\n    \ncos_sim(NN,MM)\n","output":{"0":{"name":"stdout","output_type":"stream","text":"Q1: \na deep, brutal cold set in across the midwest on wednesday, sending temperatures plummeting to depths that stunned even midwesterners, a group accustomed to shrugging off winter. the cold that seized the middle of the country was the sort that makes cars moan, that makes breathing hurt, that makes any bit of exposed skin sting.\n\ncities like chicago had been preparing for the deep freeze for days, so when it arrived, much of life had come to a standstill. colleges and schools were closed all around, and even the united states postal service had stopped deliveries in some places. workers were sent home, meetings canceled, parties called off.\n\nand the worst of the blast was still to come: forecasters said temperatures would drop again after sunset on wednesday, and that chicago might even break its record low of minus 27. the outlook for thursday was different but still grim: slightly warmer temperatures — and snow.\n***************************************************************\nQ2: \na deep brutal cold set in across the midwest on wednesday sending temperatures plummeting to depths that stunned even midwesterners a group accustomed to shrugging off winter the cold that seized the middle of the country was the sort that makes cars moan that makes breathing hurt that makes any bit of exposed skin sting\n\ncities like chicago had been preparing for the deep freeze for days so when it arrived much of life had come to a standstill colleges and schools were closed all around and even the united states postal service had stopped deliveries in some places workers were sent home meetings canceled parties called off\n\nand the worst of the blast was still to come forecasters said temperatures would drop again after sunset on wednesday and that chicago might even break its record low of minus  the outlook for thursday was different but still grim slightly warmer temperatures  and snow\n***************************************************************\nQ3: \n['a', 'deep', 'brutal', 'cold', 'set', 'in', 'across', 'the', 'midwest', 'on', 'wednesday', 'sending', 'temperatures', 'plummeting', 'to', 'depths', 'that', 'stunned', 'even', 'midwesterners', 'a', 'group', 'accustomed', 'to', 'shrugging', 'off', 'winter', 'the', 'cold', 'that', 'seized', 'the', 'middle', 'of', 'the', 'country', 'was', 'the', 'sort', 'that', 'makes', 'cars', 'moan', 'that', 'makes', 'breathing', 'hurt', 'that', 'makes', 'any', 'bit', 'of', 'exposed', 'skin', 'sting', 'cities', 'like', 'chicago', 'had', 'been', 'preparing', 'for', 'the', 'deep', 'freeze', 'for', 'days', 'so', 'when', 'it', 'arrived', 'much', 'of', 'life', 'had', 'come', 'to', 'a', 'standstill', 'colleges', 'and', 'schools', 'were', 'closed', 'all', 'around', 'and', 'even', 'the', 'united', 'states', 'postal', 'service', 'had', 'stopped', 'deliveries', 'in', 'some', 'places', 'workers', 'were', 'sent', 'home', 'meetings', 'canceled', 'parties', 'called', 'off', 'and', 'the', 'worst', 'of', 'the', 'blast', 'was', 'still', 'to', 'come', 'forecasters', 'said', 'temperatures', 'would', 'drop', 'again', 'after', 'sunset', 'on', 'wednesday', 'and', 'that', 'chicago', 'might', 'even', 'break', 'its', 'record', 'low', 'of', 'minus', 'the', 'outlook', 'for', 'thursday', 'was', 'different', 'but', 'still', 'grim', 'slightly', 'warmer', 'temperatures', 'and', 'snow']\n***************************************************************\nQ4: \n{'cities', 'life', 'midwesterners', 'outlook', 'depths', 'shrugging', 'to', 'midwest', 'sting', 'snow', 'colleges', 'after', 'days', 'when', 'in', 'postal', 'drop', 'winter', 'states', 'all', 'canceled', 'middle', 'low', 'but', 'country', 'like', 'meetings', 'wednesday', 'skin', 'off', 'makes', 'schools', 'workers', 'bit', 'seized', 'united', 'temperatures', 'home', 'come', 'service', 'any', 'much', 'called', 'preparing', 'were', 'plummeting', 'stopped', 'grim', 'record', 'deliveries', 'warmer', 'a', 'worst', 'thursday', 'sort', 'and', 'would', 'breathing', 'been', 'hurt', 'deep', 'cars', 'said', 'break', 'was', 'its', 'on', 'places', 'freeze', 'accustomed', 'still', 'exposed', 'for', 'sunset', 'blast', 'slightly', 'that', 'arrived', 'different', 'forecasters', 'chicago', 'had', 'set', 'so', 'cold', 'even', 'around', 'might', 'standstill', 'stunned', 'sent', 'it', 'sending', 'brutal', 'minus', 'of', 'again', 'the', 'closed', 'across', 'group', 'parties', 'moan', 'some'}\n\n ratio of the length of W: 104\n\n ratio of the length of L: 153\n***************************************************************\nQ5: \n['a', 'accustomed', 'across', 'after', 'again', 'all', 'and', 'any', 'around', 'arrived', 'been', 'bit', 'blast', 'break', 'breathing', 'brutal', 'but', 'called', 'canceled', 'cars', 'chicago', 'cities', 'closed', 'cold', 'colleges', 'come', 'country', 'days', 'deep', 'deliveries', 'depths', 'different', 'drop', 'even', 'exposed', 'for', 'forecasters', 'freeze', 'grim', 'group', 'had', 'home', 'hurt', 'in', 'it', 'its', 'life', 'like', 'low', 'makes', 'meetings', 'middle', 'midwest', 'midwesterners', 'might', 'minus', 'moan', 'much', 'of', 'off', 'on', 'outlook', 'parties', 'places', 'plummeting', 'postal', 'preparing', 'record', 'said', 'schools', 'seized', 'sending', 'sent', 'service', 'set', 'shrugging', 'skin', 'slightly', 'snow', 'so', 'some', 'sort', 'standstill', 'states', 'still', 'sting', 'stopped', 'stunned', 'sunset', 'temperatures', 'that', 'the', 'thursday', 'to', 'united', 'warmer', 'was', 'wednesday', 'were', 'when', 'winter', 'workers', 'worst', 'would']\n***************************************************************\nQ6: \n***************************************************************\nQ7: \n[ 3  1  1  1  1  1  5  1  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  2\n  1  2  1  1  2  1  1  1  1  3  1  3  1  1  1  1  3  1  1  2  1  1  1  1\n  1  3  1  1  1  1  1  1  1  1  5  2  2  1  1  1  1  1  1  1  1  1  1  1\n  1  1  1  1  1  1  1  1  1  1  1  1  2  1  1  1  1  3  6 10  1  4  1  1\n  3  2  2  1  1  1  1  1]\n1.0000000000000002\n"}},"pos":7,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"67b28d","input":"#I had help from Agnes from this problem\n#2\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport random\n\nx=np.random.uniform(0,1,100)\ny=np.random.uniform(0,1,100)\nplt.scatter(x,y)\n","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7fc8ae1b0c18>"},"exec_count":17,"output_type":"execute_result"},"1":{"data":{"image/png":"42cede0a9ab06a34ed239932bd48d1e25ec1afba","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":17,"metadata":{"image/png":{"height":248,"width":372}},"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"b7069e","input":"#I had help from Agnes from this problem\n#2A\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport random\n\nx=np.random.normal(0,1,100)\ny=np.random.uniform(0,1,100)\nplt.scatter(x,y)","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7fc8ae601d30>"},"exec_count":18,"output_type":"execute_result"},"1":{"data":{"image/png":"8bc8f7604726a9c421686e3b9bffa216a0c9f2db","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":18,"metadata":{"image/png":{"height":248,"width":372}},"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"f434e2","input":"#I had help from Agnes from this problem\n#2B\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport random\n\nx=np.random.normal(0,1,100)\ny=np.random.normal(0,1,100)\nplt.scatter(x,y)","output":{"0":{"data":{"text/plain":"<matplotlib.collections.PathCollection at 0x7fc8af70d588>"},"exec_count":19,"output_type":"execute_result"},"1":{"data":{"image/png":"5148bbe83cc32407a924baad3b54c0e3222e81b4","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":19,"metadata":{"image/png":{"height":248,"width":370}},"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"970986","input":"#2c. Produce a 2d histogram for this data.\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport random\nfrom matplotlib.image import NonUniformImage\nxedges = [0, 1, 3, 5]\nyedges = [0, 2, 3, 4, 6]\nx=np.random.normal(0,1,100)\ny=np.random.normal(0,1,100)\n\nH, xedges, yedges = np.histogram2d(x, y, bins=(xedges, yedges))\nH = H.T\nfig = plt.figure(figsize=(7, 3))\n\n\n#using imshow to display square bins:\nax = fig.add_subplot(131, title='imshow: square bins')\nplt.imshow(H, interpolation='nearest', origin='low',extent=[xedges[0], xedges[-1], yedges[0], yedges[-1]])\n\n\n#using pcolormesh display actual edges:\nax = fig.add_subplot(132, title='           pcolormesh: actual edges',\n        aspect='equal')\nX, Y = np.meshgrid(xedges, yedges)\nax.pcolormesh(X, Y, H)\n\n","output":{"0":{"data":{"text/plain":"<matplotlib.collections.QuadMesh at 0x7fc8aae00400>"},"exec_count":40,"output_type":"execute_result"},"1":{"data":{"image/png":"ffca787ef96db0200fe5beb676022c15c6633fe0","text/plain":"<Figure size 504x216 with 2 Axes>"},"exec_count":40,"metadata":{"image/png":{"height":184,"width":321}},"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"f4c794","input":"import numpy as np\nfrom numpy.linalg import inv\n\nM = np.array([\n        [1, 2, 3],\n        [4, 5, 6]\n            ])\n\nMT = M.transpose()\n\n#Q1\nMMT = np.matmul(M,MT)\n\nMTMMT = np.matmul(MT,MMT)\n\n#Q2\nMMT_inverse = inv(np.matrix(MMT))\n\n#Q3\nH = np.matmul(MT,np.matmul(MMT_inverse,M))\n\nHT = H.transpose()\n\nH2 = np.square(H,H)\n\nW = np.array([\n        [7, 8, 9]\n            ])\n\n#Q4\nWT = W.transpose()\n\n#Q5\nMW = np.matmul(M,WT)\n\n\nprint(\"*********** \\n@ Orginal M:\\n***********\\n\",M)\n\nprint(\"*********** \\n@ Transposed M: \\n***********\\n\",MT)\n\nprint(\"\\n\\n*********** \\n Question #1\")\n\nprint(\"\\n@ M*MT: \\n***********\\n\", MMT)\n\nprint(\"\\n\\n*********** \\n Question #2\")\n\nprint(\"\\n@ MT*(MMT):\\n***********\\n\", MTMMT)\n\nprint(\"\\n\\n*********** \\n Question #3\")\n\nprint(\"\\n@ MMT^-1:\\n***********\\n\", MMT_inverse)\n\nprint(\"\\n\\n*********** \\n Question #4\")\n\nprint(\"\\n@ H: \\n***********\\n\", H)\n\nprint(\"\\n@ HT: \\n***********\\n\", HT)\n\nprint(\"\\n@ H^2: \\n***********\\n\", H2)\n\nprint(\"\\n\\n*********** \\n Question #5    \\n***********\\n\")\n\nprint(\"@ MW: \\n***********\\n\", MW)\n\n","output":{"0":{"name":"stdout","output_type":"stream","text":"*********** \n@ Orginal M:\n***********\n [[1 2 3]\n [4 5 6]]\n*********** \n@ Transposed M: \n***********\n [[1 4]\n [2 5]\n [3 6]]\n\n\n*********** \n Question #1\n\n@ M*MT: \n***********\n [[14 32]\n [32 77]]\n\n\n*********** \n Question #2\n\n@ MT*(MMT):\n***********\n [[142 340]\n [188 449]\n [234 558]]\n\n\n*********** \n Question #3\n\n@ MMT^-1:\n***********\n [[ 1.42592593 -0.59259259]\n [-0.59259259  0.25925926]]\n\n\n*********** \n Question #4\n\n@ H: \n***********\n [[0.69444444 0.11111111 0.02777778]\n [0.11111111 0.11111111 0.11111111]\n [0.02777778 0.11111111 0.69444444]]\n\n@ HT: \n***********\n [[0.69444444 0.11111111 0.02777778]\n [0.11111111 0.11111111 0.11111111]\n [0.02777778 0.11111111 0.69444444]]\n\n@ H^2: \n***********\n [[0.69444444 0.11111111 0.02777778]\n [0.11111111 0.11111111 0.11111111]\n [0.02777778 0.11111111 0.69444444]]\n\n\n*********** \n Question #5    \n***********\n\n@ MW: \n***********\n [[ 50]\n [122]]\n"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"5e03c8","input":"#I had help from Velko on this problem \n#Still learning how to use mathplot\n\nimport matplotlib.pyplot as plt\nfrom math import *\nimport numpy as np\n#Q1\nx=np.arange(-5,6)\nplt.plot(y)\n#Q2\ntheta=np.arange(0,2*np.pi,1./100)\nx=theta-np.sin(theta)\ny=1-np.cos(theta)\nplt.plot(x,y)\n\n\n\nplt.plot(y*np.sin(x)-x*np.sin(y),\"red\")\n\n","output":{"0":{"data":{"text/plain":"[<matplotlib.lines.Line2D at 0x7f30368bf0f0>]"},"exec_count":8,"output_type":"execute_result"},"1":{"data":{"image/png":"44d9761bbdbb8d8f661624943096165cf795987d","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":8,"metadata":{"image/png":{"height":248,"width":370}},"output_type":"execute_result"}},"pos":10,"type":"cell"}
{"cell_type":"markdown","id":"04bf8d","input":"#### Question 4\n\n1. Use `matplotlib` to make a plot of $y=x^2$.\n1. Use `matplotlib` to make a plot of a [cycloid](https://en.wikipedia.org/wiki/Cycloid). \n1. Use `matplotlib` to make a [contour plot](http://snowball.millersville.edu/~adecaria/ESCI386P/esci386-lesson13-2Dplots.pdf) of the equation $z = y\\cdot \\sin(x) - x\\cdot \\sin(y)$.","pos":9,"type":"cell"}
{"cell_type":"markdown","id":"1586c6","input":"#### Question 2\n\nThis is a question about [matrix multiplication](https://www.khanacademy.org/math/precalculus/precalc-matrices/multiplying-matrices-by-matrices/v/multiplying-a-matrix-by-a-matrix).  Feel free to use numpy to help with the multiplications. [Here](https://web.stanford.edu/class/cs231a/section/section1.pdf) is a nice review/summary of linear algebra, and how to do it in python.\n\nSuppose \n\n$ M = \\left ( \\begin{matrix}1 & 2 & 3\\\\4 & 5 &6\\end{matrix} \\right )$\n\n1.  What is $MM^T$?\n1.  What is $M^T(MM^T)$?\n1.  What is $(MM^T)^{-1}$?\n1.  Let $H = M^T(MM^T)^{-1}M$.  Verify that $H$ is symmetric ($H = H^T$) and that $H^2 = H$.\n1.  If $w = \\langle 7,8,9 \\rangle ^T$, then what is $Mw$?","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"533a1f","input":"### Homework 1\n\nThis homework will familiarize you with some of the skills we'll need in the rest of the course.\n\nPlease answer the questions in this worksheet in the provided cells.\n\nSome answers might require you to shift to Markdown mode if a text based answer is required.  If mathematical symbols are needed in an answer please use $\\LaTeX$.  If you aren't sure how, it might be helpful to look at the source for the questions themselves by double clicking.  There is a lot of info on $\\LaTeX$ online.  [This](http://www.malinc.se/math/latex/basiccodeen.php) might be helpful.\n\nIf a code based answer is needed be sure that your cell is in Code mode.  \n\nFeel free to collaborate on this project, but please limit team sizes to 3 and acknowledge your collaborators.  \n\n**Due 2/14/19**\n","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"84eb12","input":"#### Question 3\n\nConsider the string $S$ defined in the cell below (borrowed from the _New York Times_).  Please process this string in the following ways.  ([This tutorial](https://www.linode.com/docs/development/python/string-manipulation-python-3/) might be helpful.) Please make the result of each part clear and easy to see.\n\n1. Convert the string to only lowercase letters (let the result be called $S_1$). (Hint:  there is a built-in string method that does this)\n1. Remove all non-alphabetical characters from $S_{1}$ except for spaces (let the result be called $S_2$).\n1. Use the `split()` method on $S_2$ to produce a list $L$ of words occurring in $S$.\n1. By using the python `set` type, produce a set $W$ of all the unique words occurring in $L$.  What is the ratio of the length of $W$ to the length of $L$?\n1. Use $W$ to produce a list $WS$ of the words in $W$ occurring in sorted order.\n1. Create a function `word_vector(WS,L)` that takes $WS$ and $L$ as input and returns a numpy array $N$ of length `len(WS)` such that for each $i$ in `range(len(WS))`, $N[i]$ is equal to the number of times the word $WS[i]$ occurs in $L$.\n1. Create a function `cos_sim(N,M)` that computes the [cosine similarity](http://blog.christianperone.com/2013/09/machine-learning-cosine-similarity-for-vector-space-models-part-iii/) of two word vectors (two outputs from `word_vector` called $N$ and $M$).","pos":5,"type":"cell"}
{"cell_type":"markdown","id":"8f3068","input":"","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"9c5f1a","input":"#### Question 5\n\nDo Assessment (2) from the Lecture 1 on the syllabus (reproduced below).  Please produce a scatter plot for 2,2a, and 2b. (Hint: [this](https://en.wikipedia.org/wiki/Unit_square) is what \"unit square\" means. [This](https://docs.scipy.org/doc/numpy/reference/generated/numpy.random.randn.html) may also be helpful.)\n\n    2.  Generate 100 points in the unit square, uniformly at random.\n    2a. Distributed normally (mu = 0.5, sigma=1) on the x axis, but uniformly on the y axis.\n    2b. Distributed normally (mu = 0.5, sigma=1) on both the x and y axis.\n    2c. Produce a 2d histogram for this data.  ","pos":11,"type":"cell"}
{"id":0,"time":1584841151624,"type":"user"}
{"last_load":1584841153596,"type":"file"}