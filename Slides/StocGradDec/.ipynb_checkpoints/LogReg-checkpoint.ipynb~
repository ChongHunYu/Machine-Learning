{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Logistic regression\n",
    "\n",
    "Earlier we thresholded linear regression to make a classifier.\n",
    "\n",
    "First we learned $\\bar{w} = X^\\dagger\\bar{y}$, where $X^\\dagger$ is the pseudoinverse.\n",
    "\n",
    "Then, with the threshold $a=0$, we defined this hypothesis:\n",
    "\n",
    "$$h_\\bar{w}(\\bar{x}) = \\begin{cases} +1 \\,\\text{if}\\, \\bar{w}^T\\bar{x} > a \\\\ \n",
    "                                    -1 \\,\\text{if}\\, \\bar{w}^T\\bar{x} \\leq a\\end{cases}$$\n",
    "\n",
    "This is the same as\n",
    "\n",
    "$$\\hat{y} = sign(\\bar{w}^T\\bar{x}).$$\n",
    "\n",
    "This sort of abrupt cutoff is sometimes called a **hard threshold**.\n",
    "\n",
    "We didn't minimize classification error directly because it is too blocky a function.\n",
    "\n",
    "There are a lot of flat abrupt plateaus and no slopes, and gradient descent can't operate.\n",
    "\n",
    "But what regression tries to optimize (linear fit) is not exactly the same as what classification seeks to optimize (best decision boundary).\n",
    "\n",
    "Therefore we didn't find the optimal classification boundary in the previous slides.\n",
    "\n",
    "\n",
    "---\n",
    "\n",
    "We now examine a sort of compromise that keeps the best properties of each:  \n",
    "\n",
    "The error function will be continuous, allowing optimization using calculus (gradient descent).\n",
    "\n",
    "But the error function also is closer to ordinary classification error.\n",
    "\n",
    "---\n",
    "\n",
    "To accomplish this we will use a **soft threshold**.\n",
    "\n",
    "$$h_\\bar{w}(\\bar{x}) = \\theta(\\bar{w}^T\\bar{x})$$\n",
    "\n",
    "where $\\theta(s) = \\frac{e^s}{1+e^s} = \\frac{1}{1+e^{-s}}$.\n",
    "\n",
    "Rather than abruptly changing from -1 to +1, this hypothesis gently changes from 0 to 1.\n",
    "\n",
    "By introducing continuous change, it becomes possible to use gradient descent to find the best $\\bar{w}$.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "\n",
    "xx = np.linspace(-7,7)\n",
    "yy = np.exp(xx)/(1+np.exp(xx))\n",
    "\n",
    "plt.plot(xx,yy)\n",
    "plt.title(\"The logistic, or sigmoid function\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Logistic Regression\n",
    "\n",
    "The basic idea of logistic regression is that\n",
    "\n",
    "$$h_\\bar{w}(\\bar{x}) = \\theta(\\bar{w}^T\\bar{x}) \\approx P(y=+1 | \\bar{x}).$$\n",
    "\n",
    "Under the assumption that this is true, we find the $\\bar{w}$ that is most likely given the data $X$.\n",
    "\n",
    "This approach is called the method of *maximum likelihood*.\n",
    "\n",
    "We now construct a measure of how likely any $\\bar{w}$ is given the data.\n",
    "\n",
    "This will basically be our error function.\n",
    "\n",
    "---\n",
    "\n",
    "Under the assumption that $\\theta(\\bar{w}^T\\bar{x}) \\approx P(y=+1 | \\bar{x})$,\n",
    "\n",
    "$$P(y | \\bar{x}) = \\begin{cases} h_\\bar{w}(\\bar{x}) \\text{ for } y=+1\\\\ 1-h_\\bar{w}(\\bar{x}) \\text{ for } y=-1 \\end{cases}$$\n",
    "\n",
    "A nice property of the logistic function helps simplify this expression:\n",
    "\n",
    "$$1-\\theta(s) = 1-\\frac{e^s}{1+e^{s}} = \\frac{1+e^s-e^{-s}}{1+e^{s}} = \\frac{1}{1+e^s}$$\n",
    "\n",
    "Therefore\n",
    "\n",
    "$$1-\\theta(s) = \\theta(-s)$$\n",
    "\n",
    "and\n",
    "\n",
    "\\begin{align}\n",
    "P(y | \\bar{x}) &= \\begin{cases} h_\\bar{w}(\\bar{x}) \\text{ for } y=+1\\\\ 1-h_\\bar{w}(\\bar{x}) \\text{ for } y=-1 \\end{cases}\\\\ &= \\begin{cases} \\theta(\\bar{w}^T\\bar{x}) \\text{ for } y=+1\\\\ 1-\\theta(\\bar{w}^T\\bar{x}) \\text{ for } y=-1 \\end{cases}\\\\ &= \\begin{cases} \\theta(\\bar{w}^T\\bar{x}) \\text{ for } y=+1\\\\ \\theta(-\\bar{w}^T\\bar{x}) \\text{ for } y=-1 \\end{cases}\\\\\n",
    "&= \\theta(y\\bar{w}^T\\bar{x})\n",
    "\\end{align}\n",
    "\n",
    "The dataset is supposed to be independently generated:\n",
    "\n",
    "$(\\bar{x}_1,y_1),(\\bar{x}_2,y_2),\\cdots,(\\bar{x}_N,y_N)$.\n",
    "\n",
    "The probability that we see all the $y$'s that we actually do see given the $\\bar{x}$'s is therefore just the product:\n",
    "\n",
    "$$\\prod_{n=1}^N P(y_n|\\bar{x}_n) \\approx \\prod_{n=1}^N \\theta(y\\bar{w}^T\\bar{x})$$\n",
    "\n",
    "This is what we want to maximize by selecting the right $\\bar{w}$.\n",
    "\n",
    "But we can equivalently minimize the negative logarithm.  \n",
    "\n",
    "This works better both numerically and analytically.\n",
    "\n",
    "\\begin{align}\n",
    "-\\frac{1}{N}\\ln(\\prod_{n=1}^N P(y_n|\\bar{x}_n)) &= -\\frac{1}{N}\\sum_{n=1}^N \\ln(P(y_n|\\bar{x}_n))\\\\\n",
    "&= \\frac{1}{N}\\sum_{n=1}^N \\ln(\\frac{1}{P(y_n|\\bar{x}_n)})\\\\\n",
    "&= \\frac{1}{N}\\sum_{n=1}^N \\ln(\\frac{1}{\\theta(y\\bar{w}^T\\bar{x})})\\\\\n",
    "&= \\frac{1}{N}\\sum_{n=1}^N \\ln(1+e^{-y_n\\bar{w}^T\\bar{x}_n})\n",
    "\\end{align}\n",
    "\n",
    "Notice that this is just the average of the pointwise error function\n",
    "\n",
    "$${\\bf e}(\\bar{w}) = \\ln(1+e^{-y_n\\bar{w}^T\\bar{x}_n})$$\n",
    "\n",
    "We can see that ${\\bf e}(\\bar{w})$ is big when $\\bar{x}_n$ is misclassified and small when $\\bar{x}$ is classified correctly.\n",
    "\n",
    "When $\\bar{x}_n$ is miscalssified $y_n$ and $\\bar{w}^T\\bar{x}$ are different signs.\n",
    "\n",
    "But when the classification is correct, the signs are the same. \n",
    "\n",
    "To summarize:\n",
    "\n",
    "$$E_{in}(\\bar{w}) = \\frac{1}{N}\\sum_{n=1}^N \\ln(1+e^{-y_n\\bar{w}^T\\bar{x}_n})$$\n",
    "\n",
    "### What's the gradient?\n",
    "\n",
    "As we said earlier, training in machine learning usually just means finding the solution to the equation\n",
    "\n",
    "$$\\nabla E_{in}(\\bar{w}) = \\bar{0}.$$\n",
    "\n",
    "As the book explains, for the logistic regression error function,\n",
    "\n",
    "$$\\nabla E_{in}(\\bar{w}) = -\\frac{1}{N}\\sum_{n=1}^N \\frac{y_n\\bar{x}_n}{1+e^{y_n\\bar{w}^T\\bar{x}}}$$\n",
    "\n",
    "This expression can't be solved analytically the way we did for the linear regression gradient.\n",
    "\n",
    "Instead we use gradient descent.\n",
    "\n",
    "---\n",
    "\n",
    "\n",
    "Below you are requested to implement this gradient descent with logistic regression.\n",
    "\n",
    "First implement the \"slow\" version which is the straightforward translation of the mathematical formula into python.\n",
    "\n",
    "Then try a \"fast\" version that uses only numpy operations (no python loops).\n",
    "\n",
    "The numpy version is about 20 times faster.  \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "def sigmoid(array):\n",
    "    \"\"\"Applies the sigmoid or logistic function to a numpy array\"\"\"\n",
    "    return 1/(1+np.exp(-array))\n",
    "\n",
    "def E_lr(w,X,y):\n",
    "    \"\"\"The logistic regression error function\"\"\"\n",
    "    return np.mean(np.log(1+np.exp(-y*X.dot(w))))\n",
    "\n",
    "\n",
    "def fast_grad_lr(w,X,y):\n",
    "    \"\"\"params: X,w,y\n",
    "       A fast version of the logistic regression\n",
    "       (No python loops -- all ops vectorized numpy ops)\n",
    "    \"\"\"\n",
    "    ### You complete me\n",
    "    \n",
    "def slowgrad(w,X,y):\n",
    "    \"\"\"A 'natural' version of the logistic regression gradient\n",
    "    with Python repeat loops allowed.\"\"\"\n",
    "    ### You complete me   "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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f/9+2759e5uZmZmv9i+//NLefPPNNjc31+bk5NjExET77bffWmutfeCBB+w999xjx44da5944omT1hceHm6XL19uc3JybM+ePe0NN9xgc3Nz7ccff2wvvvhia621Dz/8sI2Li7NHjhyx6enpNjo62u7YsSPf9rzyyiv20UcftdZam5WVZXv16mU3b87/eVnYay4p1Rbxme+3UTDGmNqSPpR0l7X2N0mTJLWTFC9pl6RninjeLcaYVGNManp6ur/KKZVGtWvovZv7amiXU/ToZ6s18dNVymGYLgAE3qpVznewhxX4OAoLcx73OYtQWm3atFF8fLwkqVevXkpLS1NmZqbmz5+vyy+/XPHx8Ro9erT391l+/PFHXX755ZKkESNGeJdjrdX48eMVFxenc889Vzt27NCePXuKXfcVV1zhvRwzbdo0b9+QWbNmKTk5WfHx8Ro4cKCysrK0devWfM+dNWuWZs2apR49eqhnz55au3atNmzYIEl66KGH9NVXXyk1NVX333//Setr06aN9zdvYmNjNXjwYBlj1K1bN6WlpXnXefHFF6tmzZpq3LixBg0a5D074lvTW2+9pfj4eJ1++unKyMjw1lRWfhkFY4yJkBM+3rHWzpAka+0en+mvSfqssOdaa1+V9Krk/BaMP+opi8iIcL04sqeemLlG//n+F+08cFT/uqqHalYPd6skAAh9Bw44PwBTmKgoZ3oZ+f4cfXh4uI4eParc3FzVr19fS5cuLfFy3nnnHaWnp2vx4sWKiIhQTEyM91dpi3LqqaeqUaNGWr58ud5//329/PLLkpyw8OGHH6pjx45FPtdaq3Hjxmn06NF/mJaRkaHMzExlZ2crKytLtWrVKrY+330QFhbmbYeFhen48ePeaabAd94XbFtr9fzzz2vo0KHFbndp+GMUjJH0H0lrrLXP+jze3Ge24ZKC47tfixEeZjThwi56+KIu+mrNHl392gL9mnnM7bIAIHTVr+/8+lxhjhxxpvtR3bp11aZNG33wwQeSnA/WZcuWSXL6bXz44YeSpKlTp3qfc/DgQTVt2lQRERGaO3eutmxxvlG7Tp06OnToUJHruvLKK/XUU0/p4MGDiouLkyQNHTpUzz//fF63Bf38889/eN7QoUM1efJkZWZmSpJ27NihvXv3SpJGjx6tRx99VCNHjtTf/va3YusrjU8++URZWVnK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\n",
      "text/plain": [
       "<Figure size 648x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import mystuff as ms\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "np.random.seed(100)\n",
    "\n",
    "ynum=20  ## Number of positive examples\n",
    "nnum=15  ## Number of negative examples\n",
    "\n",
    "yes = np.random.randn(ynum)*3-2  ## positive examples\n",
    "no = np.random.randn(nnum)+3     ## negative examples\n",
    "\n",
    "yyes = np.ones(ynum)\n",
    "yno = np.ones(nnum)*-1\n",
    "\n",
    "preX = np.hstack((yes,no))  ## X but no bias yet\n",
    "y = np.hstack((yyes,yno))   ## targets y\n",
    "\n",
    "X = np.c_[np.ones(ynum+nnum),preX]  ## adding bias\n",
    "\n",
    "w = np.array([4,-3])\n",
    "fig = plt.figure(figsize=(9,8))\n",
    "\n",
    "plt.scatter(X[:ynum,1],np.zeros(ynum),c='b',alpha=0.3,s=60,label=\"positive example\")\n",
    "plt.scatter(X[ynum:,1],np.zeros(nnum),c='r',alpha=0.3,s=60,label=\"negative example\")\n",
    "\n",
    "plt.plot(X[:,1],X.dot(w))\n",
    "plt.title(\"Some 1D data and a decision boundary\")\n",
    "plt.legend()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-0.02068757, -0.01424479])"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "ms.fast_grad_lr(w,X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 1.35 ms, sys: 134 µs, total: 1.49 ms\n",
      "Wall time: 1.4 ms\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([-0.02306013,  0.01168821])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "slowgrad(w,X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CPU times: user 195 µs, sys: 0 ns, total: 195 µs\n",
      "Wall time: 180 µs\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "array([-0.02306013,  0.01168821])"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "%%time\n",
    "ms.fast_grad_lr(w,X,y)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "w = np.zeros(2)\n",
    "w,path = ms.grad_descent(w,X,y,ms.fast_grad_lr,eta=0.1,max_iter=3000)\n",
    "errors = [E_lr(ww,X,y) for ww in path]\n",
    "plt.plot(np.arange(len(errors)),errors)\n",
    "plt.title(\"Error as gradient descent progresses\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x576 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 points misclassified\n",
      "w = [ 4.93747616 -3.32230352]\n"
     ]
    }
   ],
   "source": [
    "def plot_sigmoid(w,dom):\n",
    "    F = np.c_[np.ones(dom.shape[0]),dom]\n",
    "    return 1/(1+np.exp(-F.dot(w)))\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "np.random.seed(100)\n",
    "\n",
    "ynum=20  ## Number of positive examples\n",
    "nnum=15  ## Number of negative examples\n",
    "\n",
    "yes = np.random.randn(ynum)*3-2  ## positive examples\n",
    "no = np.random.randn(nnum)+3     ## negative examples\n",
    "\n",
    "yyes = np.ones(ynum)\n",
    "yno = np.ones(nnum)*-1\n",
    "\n",
    "preX = np.hstack((yes,no))  ## X but no bias yet\n",
    "y = np.hstack((yyes,yno))   ## targets y\n",
    "\n",
    "X = np.c_[np.ones(ynum+nnum),preX]  ## adding bias\n",
    "\n",
    "#w = np.linalg.pinv(X).dot(y)\n",
    "\n",
    "dom = np.linspace(-7,5)\n",
    "\n",
    "fig = plt.figure(figsize=(9,8))\n",
    "plt.scatter(X[:ynum,1],np.ones(ynum),c='b',alpha=0.3,s=60)\n",
    "plt.scatter(X[ynum:,1],-np.ones(nnum),c='r',alpha=0.3,s=60)\n",
    "plt.plot(dom,plot_sigmoid(w,dom),label=r\"regression line $\\bar{w}=X^\\dagger \\bar{y}$\")\n",
    "plt.plot(np.linspace(-7,5),np.zeros(50)+0.5,label=\"threshold\")\n",
    "mc = 2*(sigmoid(X.dot(w)) > 0.5)-1 !=y\n",
    "plt.scatter(X[mc,1],np.ones(np.sum(mc)),c='yellow',alpha=1,s=60,label=\"misclassified\")\n",
    "plt.legend()\n",
    "plt.title(\"Some 1D data, regression for classification\")\n",
    "plt.show()\n",
    "print(\"{} points misclassified\".format(np.sum(mc)))\n",
    "print(\"w =\",w)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "xx = np.linspace(-5,5,100)\n",
    "yy = np.linspace(-5,2,100)\n",
    "\n",
    "XX,YY = np.meshgrid(xx,yy)\n",
    "W = np.c_[XX.ravel(),YY.ravel()]\n",
    "#errs = ((X.dot(W.T)).T - y)**2\n",
    "errs = np.log(1+np.exp(-X.dot(W.T).T*y))\n",
    "E = np.mean(errs,axis=1)\n",
    "plt.contourf(XX,YY,E.reshape(100,100),levels=300)\n",
    "plt.title(r\"Contour plot of $z=E_{in}(\\bar{w})$ (logistic regression)\")\n",
    "plt.xlabel(r\"$w_0$\")\n",
    "P = path[:1000]\n",
    "plt.plot(P[:,0],P[:,1],c='r',label=\"SGD path\")\n",
    "plt.ylabel(r\"$w_1$\")\n",
    "plt.colorbar()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
