{"backend_state":"running","kernel":"anaconda5","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":76136448},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.7"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"844163","input":"","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"04da25","input":"## The shape attribute tells us the number of rows and columns, respectively\ndf.shape","output":{"0":{"data":{"text/plain":"(1385, 29)"},"exec_count":11,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"310c31","input":"#Much more here:\n    \n#https://seaborn.pydata.org/tutorial/categorical.html\n        ","pos":34,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"3c3b2c","input":"df = pd.read_csv(\"wdbc.data.txt\",header=None)\ndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>3</th>\n      <th>4</th>\n      <th>5</th>\n      <th>6</th>\n      <th>7</th>\n      <th>8</th>\n      <th>9</th>\n      <th>...</th>\n      <th>22</th>\n      <th>23</th>\n      <th>24</th>\n      <th>25</th>\n      <th>26</th>\n      <th>27</th>\n      <th>28</th>\n      <th>29</th>\n      <th>30</th>\n      <th>31</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>842302</td>\n      <td>M</td>\n      <td>17.99</td>\n      <td>10.38</td>\n      <td>122.80</td>\n      <td>1001.0</td>\n      <td>0.11840</td>\n      <td>0.27760</td>\n      <td>0.3001</td>\n      <td>0.14710</td>\n      <td>...</td>\n      <td>25.38</td>\n      <td>17.33</td>\n      <td>184.60</td>\n      <td>2019.0</td>\n      <td>0.1622</td>\n      <td>0.6656</td>\n      <td>0.7119</td>\n      <td>0.2654</td>\n      <td>0.4601</td>\n      <td>0.11890</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>842517</td>\n      <td>M</td>\n      <td>20.57</td>\n      <td>17.77</td>\n      <td>132.90</td>\n      <td>1326.0</td>\n      <td>0.08474</td>\n      <td>0.07864</td>\n      <td>0.0869</td>\n      <td>0.07017</td>\n      <td>...</td>\n      <td>24.99</td>\n      <td>23.41</td>\n      <td>158.80</td>\n      <td>1956.0</td>\n      <td>0.1238</td>\n      <td>0.1866</td>\n      <td>0.2416</td>\n      <td>0.1860</td>\n      <td>0.2750</td>\n      <td>0.08902</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>84300903</td>\n      <td>M</td>\n      <td>19.69</td>\n      <td>21.25</td>\n      <td>130.00</td>\n      <td>1203.0</td>\n      <td>0.10960</td>\n      <td>0.15990</td>\n      <td>0.1974</td>\n      <td>0.12790</td>\n      <td>...</td>\n      <td>23.57</td>\n      <td>25.53</td>\n      <td>152.50</td>\n      <td>1709.0</td>\n      <td>0.1444</td>\n      <td>0.4245</td>\n      <td>0.4504</td>\n      <td>0.2430</td>\n      <td>0.3613</td>\n      <td>0.08758</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>84348301</td>\n      <td>M</td>\n      <td>11.42</td>\n      <td>20.38</td>\n      <td>77.58</td>\n      <td>386.1</td>\n      <td>0.14250</td>\n      <td>0.28390</td>\n      <td>0.2414</td>\n      <td>0.10520</td>\n      <td>...</td>\n      <td>14.91</td>\n      <td>26.50</td>\n      <td>98.87</td>\n      <td>567.7</td>\n      <td>0.2098</td>\n      <td>0.8663</td>\n      <td>0.6869</td>\n      <td>0.2575</td>\n      <td>0.6638</td>\n      <td>0.17300</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>84358402</td>\n      <td>M</td>\n      <td>20.29</td>\n      <td>14.34</td>\n      <td>135.10</td>\n      <td>1297.0</td>\n      <td>0.10030</td>\n      <td>0.13280</td>\n      <td>0.1980</td>\n      <td>0.10430</td>\n      <td>...</td>\n      <td>22.54</td>\n      <td>16.67</td>\n      <td>152.20</td>\n      <td>1575.0</td>\n      <td>0.1374</td>\n      <td>0.2050</td>\n      <td>0.4000</td>\n      <td>0.1625</td>\n      <td>0.2364</td>\n      <td>0.07678</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 32 columns</p>\n</div>","text/plain":"         0  1      2      3       4       5        6        7       8   \\\n0    842302  M  17.99  10.38  122.80  1001.0  0.11840  0.27760  0.3001   \n1    842517  M  20.57  17.77  132.90  1326.0  0.08474  0.07864  0.0869   \n2  84300903  M  19.69  21.25  130.00  1203.0  0.10960  0.15990  0.1974   \n3  84348301  M  11.42  20.38   77.58   386.1  0.14250  0.28390  0.2414   \n4  84358402  M  20.29  14.34  135.10  1297.0  0.10030  0.13280  0.1980   \n\n        9    ...        22     23      24      25      26      27      28  \\\n0  0.14710   ...     25.38  17.33  184.60  2019.0  0.1622  0.6656  0.7119   \n1  0.07017   ...     24.99  23.41  158.80  1956.0  0.1238  0.1866  0.2416   \n2  0.12790   ...     23.57  25.53  152.50  1709.0  0.1444  0.4245  0.4504   \n3  0.10520   ...     14.91  26.50   98.87   567.7  0.2098  0.8663  0.6869   \n4  0.10430   ...     22.54  16.67  152.20  1575.0  0.1374  0.2050  0.4000   \n\n       29      30       31  \n0  0.2654  0.4601  0.11890  \n1  0.1860  0.2750  0.08902  \n2  0.2430  0.3613  0.08758  \n3  0.2575  0.6638  0.17300  \n4  0.1625  0.2364  0.07678  \n\n[5 rows x 32 columns]"},"exec_count":17,"output_type":"execute_result"}},"pos":15,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"866105","input":"col_names = [\"ID\",\"Diagnosis\",\"mean_radius\",\"std_err_radius\",\"worst_radius\",\n            \"mean_texture\",\"std_err_texture\",\"worst_texture\",\n            \"mean_perimeter\",\"std_err_perimeter\",\"worst_perimeter\",\n            \"mean_area\",\"std_err_area\",\"worst_area\",\n            \"mean_smoothness\",\"std_err_smoothness\",\"worst_smoothness\",\n            \"mean_compactness\",\"std_err_compactness\",\"worst_compactness\",\n            \"mean_concavity\",\"std_err_concavity\",\"worst_concavity\",\n            \"mean_concave_pts\",\"std_err_concave_pts\",\"worst_concave_pts\",\n            \"mean_symmetry\",\"std_err_symmetry\",\"worst_symmetry\",\n            \"mean_fractal_dim\",\"std_err_fractal_dim\",\"worst_fractal_dim\"]\nlen(col_names) == 32","output":{"0":{"data":{"text/plain":"True"},"exec_count":18,"output_type":"execute_result"}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"956306","input":"df.columns = col_names","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"359e0c","input":"import matplotlib.pyplot as plt\n\nimport seaborn as sns\nsns.set()\n\ncols = [\"mean_smoothness\",\"mean_radius\"]\nfor col in cols:\n    plt.hist(df[col], density=True, alpha=0.5)\nplt.legend([\"ms\",\"mr\"])    \nplt.show() ","output":{"0":{"data":{"image/png":"bb684ced9789b716f45d033420d5447e3c8274d9","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":23,"metadata":{"image/png":{"height":254,"width":383}},"output_type":"execute_result"}},"pos":27,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"5a5871","input":"sns.catplot(x=\"mean_radius\", y=\"Diagnosis\",\n            kind=\"violin\", split=True, data=df);","output":{"0":{"data":{"image/png":"1dd58d5de2074fcb734f59294bc5bf777ac360e3","text/plain":"<Figure size 360x360 with 1 Axes>"},"exec_count":24,"metadata":{"image/png":{"height":346,"width":346}},"output_type":"execute_result"}},"pos":28,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"438ed1","input":"for col in [\"mean_radius\",\"mean_smoothness\"]:\n    sns.kdeplot(df[col], shade=True)","output":{"0":{"data":{"image/png":"e056dfd661538b8553ed75d9a0550db70ecaf0a3","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":25,"metadata":{"image/png":{"height":254,"width":383}},"output_type":"execute_result"}},"pos":29,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"34638b","input":"col_names = np.array(col_names)\ncol_names[[1,22,13]]","output":{"0":{"data":{"text/plain":"array(['Diagnosis', 'worst_concavity', 'worst_area'], dtype='<U19')"},"exec_count":26,"output_type":"execute_result"}},"pos":30,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"930f3f","input":"## col_names = np.array(col_names)\ndf_small = df[col_names[[1,22,13]]]\ndf_small.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Diagnosis</th>\n      <th>worst_concavity</th>\n      <th>worst_area</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M</td>\n      <td>25.38</td>\n      <td>0.9053</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M</td>\n      <td>24.99</td>\n      <td>0.7339</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M</td>\n      <td>23.57</td>\n      <td>0.7869</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M</td>\n      <td>14.91</td>\n      <td>1.1560</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M</td>\n      <td>22.54</td>\n      <td>0.7813</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Diagnosis  worst_concavity  worst_area\n0         M            25.38      0.9053\n1         M            24.99      0.7339\n2         M            23.57      0.7869\n3         M            14.91      1.1560\n4         M            22.54      0.7813"},"exec_count":27,"output_type":"execute_result"}},"pos":31,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"4d3f82","input":"with sns.axes_style('white'):\n    sns.jointplot(col_names[6], col_names[9], data=df, kind='hex')","output":{"0":{"data":{"image/png":"acd4d0d2ab6215db8c64e879c8ae7d786942c6ba","text/plain":"<Figure size 432x432 with 3 Axes>"},"exec_count":29,"metadata":{"image/png":{"height":418,"width":430}},"output_type":"execute_result"}},"pos":33,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"b32406","input":"## What data files are in this directory?\n!ls -l","output":{"0":{"name":"stdout","output_type":"stream","text":"total 679\r\n-rw-r--r-- 1 user user   1853 Jan 29 19:24 Discretization-Criteria.csv\r\n-rw-r--r-- 1 user user 161842 Oct  1 01:48 HCV-Egy-Data.csv\r\n-rw-r--r-- 1 user user 191873 Jan 25 15:55 abalone.data.txt\r\n-rw-r--r-- 1 user user 422495 Feb  4 16:40 pandas.ipynb\r\n-rw-r--r-- 1 user user 124103 Jan 25 15:55 wdbc.data.txt\r\n"}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"684722","input":"sns.pairplot(df_small,hue=\"Diagnosis\")","output":{"0":{"data":{"text/plain":"<seaborn.axisgrid.PairGrid at 0x7f9188be6898>"},"exec_count":30,"output_type":"execute_result"},"1":{"data":{"image/png":"a8e669ede95ed9116db5d276253f1817d471156d","text/plain":"<Figure size 413.425x360 with 6 Axes>"},"exec_count":30,"metadata":{"image/png":{"height":346,"width":399}},"output_type":"execute_result"}},"pos":32,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"898119","input":"df2 = df[[\"Diagnosis\",\"mean_texture\"]]\ndf2.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Diagnosis</th>\n      <th>mean_texture</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M</td>\n      <td>1001.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M</td>\n      <td>1326.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M</td>\n      <td>1203.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>M</td>\n      <td>386.1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M</td>\n      <td>1297.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Diagnosis  mean_texture\n0         M        1001.0\n1         M        1326.0\n2         M        1203.0\n3         M         386.1\n4         M        1297.0"},"exec_count":35,"output_type":"execute_result"}},"pos":22,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"1b1895","input":"df2.shape","output":{"0":{"data":{"text/plain":"(569, 2)"},"exec_count":36,"output_type":"execute_result"}},"pos":23,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"b639f6","input":"\ndf3 = df2[df2[\"mean_texture\"]>1000]\ndf3.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Diagnosis</th>\n      <th>mean_texture</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>M</td>\n      <td>1001.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>M</td>\n      <td>1326.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>M</td>\n      <td>1203.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>M</td>\n      <td>1297.0</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>M</td>\n      <td>1040.0</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"  Diagnosis  mean_texture\n0         M        1001.0\n1         M        1326.0\n2         M        1203.0\n4         M        1297.0\n6         M        1040.0"},"exec_count":37,"output_type":"execute_result"}},"pos":24,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"02b826","input":"df3.shape","output":{"0":{"data":{"text/plain":"(92, 2)"},"exec_count":38,"output_type":"execute_result"}},"pos":25,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"5d7375","input":"df.columns","output":{"0":{"data":{"text/plain":"Index(['Age ', 'Gender', 'BMI', 'Fever', 'Nausea/Vomting', 'Headache ',\n       'Diarrhea ', 'Fatigue & generalized bone ache ', 'Jaundice ',\n       'Epigastric pain ', 'WBC', 'RBC', 'HGB', 'Plat', 'AST 1', 'ALT 1',\n       'ALT4', 'ALT 12', 'ALT 24', 'ALT 36', 'ALT 48', 'ALT after 24 w',\n       'RNA Base', 'RNA 4', 'RNA 12', 'RNA EOT', 'RNA EF',\n       'Baseline histological Grading', 'Baselinehistological staging'],\n      dtype='object')"},"exec_count":5,"output_type":"execute_result"}},"pos":9,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"1aad77","input":"df.describe()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>BMI</th>\n      <th>Fever</th>\n      <th>Nausea/Vomting</th>\n      <th>Headache</th>\n      <th>Diarrhea</th>\n      <th>Fatigue &amp; generalized bone ache</th>\n      <th>Jaundice</th>\n      <th>Epigastric pain</th>\n      <th>...</th>\n      <th>ALT 36</th>\n      <th>ALT 48</th>\n      <th>ALT after 24 w</th>\n      <th>RNA Base</th>\n      <th>RNA 4</th>\n      <th>RNA 12</th>\n      <th>RNA EOT</th>\n      <th>RNA EF</th>\n      <th>Baseline histological Grading</th>\n      <th>Baselinehistological staging</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>...</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1.385000e+03</td>\n      <td>1.385000e+03</td>\n      <td>1.385000e+03</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n      <td>1385.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>46.319134</td>\n      <td>1.489531</td>\n      <td>28.608664</td>\n      <td>1.515523</td>\n      <td>1.502527</td>\n      <td>1.496029</td>\n      <td>1.502527</td>\n      <td>1.498917</td>\n      <td>1.501083</td>\n      <td>1.503971</td>\n      <td>...</td>\n      <td>83.117690</td>\n      <td>83.629603</td>\n      <td>33.438267</td>\n      <td>5.909512e+05</td>\n      <td>6.008956e+05</td>\n      <td>2.887536e+05</td>\n      <td>287660.336462</td>\n      <td>291378.290975</td>\n      <td>9.761733</td>\n      <td>2.536462</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>8.781506</td>\n      <td>0.500071</td>\n      <td>4.076215</td>\n      <td>0.499939</td>\n      <td>0.500174</td>\n      <td>0.500165</td>\n      <td>0.500174</td>\n      <td>0.500179</td>\n      <td>0.500179</td>\n      <td>0.500165</td>\n      <td>...</td>\n      <td>26.399031</td>\n      <td>26.223955</td>\n      <td>7.073569</td>\n      <td>3.539354e+05</td>\n      <td>3.623151e+05</td>\n      <td>2.853507e+05</td>\n      <td>264559.525070</td>\n      <td>267700.691713</td>\n      <td>4.023896</td>\n      <td>1.121392</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>32.000000</td>\n      <td>1.000000</td>\n      <td>22.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>...</td>\n      <td>5.000000</td>\n      <td>5.000000</td>\n      <td>5.000000</td>\n      <td>1.100000e+01</td>\n      <td>5.000000e+00</td>\n      <td>5.000000e+00</td>\n      <td>5.000000</td>\n      <td>5.000000</td>\n      <td>3.000000</td>\n      <td>1.000000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>39.000000</td>\n      <td>1.000000</td>\n      <td>25.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>1.000000</td>\n      <td>...</td>\n      <td>61.000000</td>\n      <td>61.000000</td>\n      <td>28.000000</td>\n      <td>2.692530e+05</td>\n      <td>2.708930e+05</td>\n      <td>5.000000e+00</td>\n      <td>5.000000</td>\n      <td>5.000000</td>\n      <td>6.000000</td>\n      <td>2.000000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>46.000000</td>\n      <td>1.000000</td>\n      <td>29.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>...</td>\n      <td>84.000000</td>\n      <td>83.000000</td>\n      <td>34.000000</td>\n      <td>5.931030e+05</td>\n      <td>5.978690e+05</td>\n      <td>2.343590e+05</td>\n      <td>251376.000000</td>\n      <td>244049.000000</td>\n      <td>10.000000</td>\n      <td>3.000000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>54.000000</td>\n      <td>2.000000</td>\n      <td>32.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>...</td>\n      <td>106.000000</td>\n      <td>106.000000</td>\n      <td>40.000000</td>\n      <td>8.867910e+05</td>\n      <td>9.090930e+05</td>\n      <td>5.248190e+05</td>\n      <td>517806.000000</td>\n      <td>527864.000000</td>\n      <td>13.000000</td>\n      <td>4.000000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>61.000000</td>\n      <td>2.000000</td>\n      <td>35.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>2.000000</td>\n      <td>...</td>\n      <td>128.000000</td>\n      <td>128.000000</td>\n      <td>45.000000</td>\n      <td>1.201086e+06</td>\n      <td>1.201715e+06</td>\n      <td>3.731527e+06</td>\n      <td>808450.000000</td>\n      <td>810333.000000</td>\n      <td>16.000000</td>\n      <td>4.000000</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows Ã— 29 columns</p>\n</div>","text/plain":"              Age        Gender          BMI        Fever  Nausea/Vomting  \\\ncount  1385.000000  1385.000000  1385.000000  1385.000000     1385.000000   \nmean     46.319134     1.489531    28.608664     1.515523        1.502527   \nstd       8.781506     0.500071     4.076215     0.499939        0.500174   \nmin      32.000000     1.000000    22.000000     1.000000        1.000000   \n25%      39.000000     1.000000    25.000000     1.000000        1.000000   \n50%      46.000000     1.000000    29.000000     2.000000        2.000000   \n75%      54.000000     2.000000    32.000000     2.000000        2.000000   \nmax      61.000000     2.000000    35.000000     2.000000        2.000000   \n\n         Headache     Diarrhea   Fatigue & generalized bone ache   \\\ncount  1385.000000  1385.000000                       1385.000000   \nmean      1.496029     1.502527                          1.498917   \nstd       0.500165     0.500174                          0.500179   \nmin       1.000000     1.000000                          1.000000   \n25%       1.000000     1.000000                          1.000000   \n50%       1.000000     2.000000                          1.000000   \n75%       2.000000     2.000000                          2.000000   \nmax       2.000000     2.000000                          2.000000   \n\n         Jaundice   Epigastric pain               ...               \\\ncount  1385.000000       1385.000000              ...                \nmean      1.501083          1.503971              ...                \nstd       0.500179          0.500165              ...                \nmin       1.000000          1.000000              ...                \n25%       1.000000          1.000000              ...                \n50%       2.000000          2.000000              ...                \n75%       2.000000          2.000000              ...                \nmax       2.000000          2.000000              ...                \n\n            ALT 36       ALT 48  ALT after 24 w      RNA Base         RNA 4  \\\ncount  1385.000000  1385.000000     1385.000000  1.385000e+03  1.385000e+03   \nmean     83.117690    83.629603       33.438267  5.909512e+05  6.008956e+05   \nstd      26.399031    26.223955        7.073569  3.539354e+05  3.623151e+05   \nmin       5.000000     5.000000        5.000000  1.100000e+01  5.000000e+00   \n25%      61.000000    61.000000       28.000000  2.692530e+05  2.708930e+05   \n50%      84.000000    83.000000       34.000000  5.931030e+05  5.978690e+05   \n75%     106.000000   106.000000       40.000000  8.867910e+05  9.090930e+05   \nmax     128.000000   128.000000       45.000000  1.201086e+06  1.201715e+06   \n\n             RNA 12        RNA EOT         RNA EF  \\\ncount  1.385000e+03    1385.000000    1385.000000   \nmean   2.887536e+05  287660.336462  291378.290975   \nstd    2.853507e+05  264559.525070  267700.691713   \nmin    5.000000e+00       5.000000       5.000000   \n25%    5.000000e+00       5.000000       5.000000   \n50%    2.343590e+05  251376.000000  244049.000000   \n75%    5.248190e+05  517806.000000  527864.000000   \nmax    3.731527e+06  808450.000000  810333.000000   \n\n       Baseline histological Grading  Baselinehistological staging  \ncount                    1385.000000                   1385.000000  \nmean                        9.761733                      2.536462  \nstd                         4.023896                      1.121392  \nmin                         3.000000                      1.000000  \n25%                         6.000000                      2.000000  \n50%                        10.000000                      3.000000  \n75%                        13.000000                      4.000000  \nmax                        16.000000                      4.000000  \n\n[8 rows x 29 columns]"},"exec_count":6,"output_type":"execute_result"}},"pos":13,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"bd0007","input":"import pandas as pd\nimport numpy as np\n\n## Read the data in CSV form into a pandas dataframe.\ndf = pd.read_csv(\"HCV-Egy-Data.csv\")\n","pos":3,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"056150","input":"type(df)","output":{"0":{"data":{"text/plain":"pandas.core.frame.DataFrame"},"exec_count":7,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"159bb6","input":"df.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>ID</th>\n      <th>Diagnosis</th>\n      <th>mean_radius</th>\n      <th>std_err_radius</th>\n      <th>worst_radius</th>\n      <th>mean_texture</th>\n      <th>std_err_texture</th>\n      <th>worst_texture</th>\n      <th>mean_perimeter</th>\n      <th>std_err_perimeter</th>\n      <th>...</th>\n      <th>worst_concavity</th>\n      <th>mean_concave_pts</th>\n      <th>std_err_concave_pts</th>\n      <th>worst_concave_pts</th>\n      <th>mean_symmetry</th>\n      <th>std_err_symmetry</th>\n      <th>worst_symmetry</th>\n      <th>mean_fractal_dim</th>\n      <th>std_err_fractal_dim</th>\n      <th>worst_fractal_dim</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>842517</td>\n      <td>M</td>\n      <td>20.57</td>\n      <td>17.77</td>\n      <td>132.90</td>\n      <td>1326.0</td>\n      <td>0.08474</td>\n      <td>0.07864</td>\n      <td>0.0869</td>\n      <td>0.07017</td>\n      <td>...</td>\n      <td>24.99</td>\n      <td>23.41</td>\n      <td>158.80</td>\n      <td>1956.0</td>\n      <td>0.1238</td>\n      <td>0.1866</td>\n      <td>0.2416</td>\n      <td>0.1860</td>\n      <td>0.2750</td>\n      <td>0.08902</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>84300903</td>\n      <td>M</td>\n      <td>19.69</td>\n      <td>21.25</td>\n      <td>130.00</td>\n      <td>1203.0</td>\n      <td>0.10960</td>\n      <td>0.15990</td>\n      <td>0.1974</td>\n      <td>0.12790</td>\n      <td>...</td>\n      <td>23.57</td>\n      <td>25.53</td>\n      <td>152.50</td>\n      <td>1709.0</td>\n      <td>0.1444</td>\n      <td>0.4245</td>\n      <td>0.4504</td>\n      <td>0.2430</td>\n      <td>0.3613</td>\n      <td>0.08758</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>84348301</td>\n      <td>M</td>\n      <td>11.42</td>\n      <td>20.38</td>\n      <td>77.58</td>\n      <td>386.1</td>\n      <td>0.14250</td>\n      <td>0.28390</td>\n      <td>0.2414</td>\n      <td>0.10520</td>\n      <td>...</td>\n      <td>14.91</td>\n      <td>26.50</td>\n      <td>98.87</td>\n      <td>567.7</td>\n      <td>0.2098</td>\n      <td>0.8663</td>\n      <td>0.6869</td>\n      <td>0.2575</td>\n      <td>0.6638</td>\n      <td>0.17300</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>84358402</td>\n      <td>M</td>\n      <td>20.29</td>\n      <td>14.34</td>\n      <td>135.10</td>\n      <td>1297.0</td>\n      <td>0.10030</td>\n      <td>0.13280</td>\n      <td>0.1980</td>\n      <td>0.10430</td>\n      <td>...</td>\n      <td>22.54</td>\n      <td>16.67</td>\n      <td>152.20</td>\n      <td>1575.0</td>\n      <td>0.1374</td>\n      <td>0.2050</td>\n      <td>0.4000</td>\n      <td>0.1625</td>\n      <td>0.2364</td>\n      <td>0.07678</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>843786</td>\n      <td>M</td>\n      <td>12.45</td>\n      <td>15.70</td>\n      <td>82.57</td>\n      <td>477.1</td>\n      <td>0.12780</td>\n      <td>0.17000</td>\n      <td>0.1578</td>\n      <td>0.08089</td>\n      <td>...</td>\n      <td>15.47</td>\n      <td>23.75</td>\n      <td>103.40</td>\n      <td>741.6</td>\n      <td>0.1791</td>\n      <td>0.5249</td>\n      <td>0.5355</td>\n      <td>0.1741</td>\n      <td>0.3985</td>\n      <td>0.12440</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 32 columns</p>\n</div>"},"exec_count":8,"output_type":"execute_result"}},"pos":20,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"7d8516","input":"## The head() function prints out the first few lines of data in HTML format. \ndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Age</th>\n      <th>Gender</th>\n      <th>BMI</th>\n      <th>Fever</th>\n      <th>Nausea/Vomting</th>\n      <th>Headache</th>\n      <th>Diarrhea</th>\n      <th>Fatigue &amp; generalized bone ache</th>\n      <th>Jaundice</th>\n      <th>Epigastric pain</th>\n      <th>...</th>\n      <th>ALT 36</th>\n      <th>ALT 48</th>\n      <th>ALT after 24 w</th>\n      <th>RNA Base</th>\n      <th>RNA 4</th>\n      <th>RNA 12</th>\n      <th>RNA EOT</th>\n      <th>RNA EF</th>\n      <th>Baseline histological Grading</th>\n      <th>Baselinehistological staging</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>56</td>\n      <td>1</td>\n      <td>35</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>655330</td>\n      <td>634536</td>\n      <td>288194</td>\n      <td>5</td>\n      <td>5</td>\n      <td>13</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>46</td>\n      <td>1</td>\n      <td>29</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>...</td>\n      <td>57</td>\n      <td>123</td>\n      <td>44</td>\n      <td>40620</td>\n      <td>538635</td>\n      <td>637056</td>\n      <td>336804</td>\n      <td>31085</td>\n      <td>4</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>57</td>\n      <td>1</td>\n      <td>33</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>...</td>\n      <td>5</td>\n      <td>5</td>\n      <td>5</td>\n      <td>571148</td>\n      <td>661346</td>\n      <td>5</td>\n      <td>735945</td>\n      <td>558829</td>\n      <td>4</td>\n      <td>4</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>49</td>\n      <td>2</td>\n      <td>33</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>...</td>\n      <td>48</td>\n      <td>77</td>\n      <td>33</td>\n      <td>1041941</td>\n      <td>449939</td>\n      <td>585688</td>\n      <td>744463</td>\n      <td>582301</td>\n      <td>10</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>59</td>\n      <td>1</td>\n      <td>32</td>\n      <td>1</td>\n      <td>1</td>\n      <td>2</td>\n      <td>1</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>...</td>\n      <td>94</td>\n      <td>90</td>\n      <td>30</td>\n      <td>660410</td>\n      <td>738756</td>\n      <td>3731527</td>\n      <td>338946</td>\n      <td>242861</td>\n      <td>11</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 29 columns</p>\n</div>","text/plain":"   Age   Gender  BMI  Fever  Nausea/Vomting  Headache   Diarrhea   \\\n0    56       1   35      2               1          1          1   \n1    46       1   29      1               2          2          1   \n2    57       1   33      2               2          2          2   \n3    49       2   33      1               2          1          2   \n4    59       1   32      1               1          2          1   \n\n   Fatigue & generalized bone ache   Jaundice   Epigastric pain   \\\n0                                 2          2                 2   \n1                                 2          2                 1   \n2                                 1          1                 1   \n3                                 1          2                 1   \n4                                 2          2                 2   \n\n               ...               ALT 36  ALT 48  ALT after 24 w  RNA Base  \\\n0              ...                    5       5               5    655330   \n1              ...                   57     123              44     40620   \n2              ...                    5       5               5    571148   \n3              ...                   48      77              33   1041941   \n4              ...                   94      90              30    660410   \n\n    RNA 4   RNA 12  RNA EOT  RNA EF  Baseline histological Grading  \\\n0  634536   288194        5       5                             13   \n1  538635   637056   336804   31085                              4   \n2  661346        5   735945  558829                              4   \n3  449939   585688   744463  582301                             10   \n4  738756  3731527   338946  242861                             11   \n\n   Baselinehistological staging  \n0                             2  \n1                             2  \n2                             4  \n3                             3  \n4                             1  \n\n[5 rows x 29 columns]"},"exec_count":8,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"d426d0","input":"df.dtypes","output":{"0":{"data":{"text/plain":"Age                                   int64\nGender                                int64\nBMI                                   int64\nFever                                 int64\nNausea/Vomting                        int64\nHeadache                              int64\nDiarrhea                              int64\nFatigue & generalized bone ache       int64\nJaundice                              int64\nEpigastric pain                       int64\nWBC                                   int64\nRBC                                 float64\nHGB                                   int64\nPlat                                float64\nAST 1                                 int64\nALT 1                                 int64\nALT4                                float64\nALT 12                                int64\nALT 24                                int64\nALT 36                                int64\nALT 48                                int64\nALT after 24 w                        int64\nRNA Base                              int64\nRNA 4                                 int64\nRNA 12                                int64\nRNA EOT                               int64\nRNA EF                                int64\nBaseline histological Grading         int64\nBaselinehistological staging          int64\ndtype: object"},"exec_count":9,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"markdown","id":"0b9fb0","input":"### Another example\n\nWe load a different dataset.  This time, the column names are not given to us by the data creators.\n\nhttps://archive.ics.uci.edu/ml/datasets/Breast+Cancer+Wisconsin+(Diagnostic)\n\n","pos":14,"type":"cell"}
{"cell_type":"markdown","id":"2933c8","input":"### Basic statistics\n\nA usefule Pandas command `describe()` outputs a basic statistical description of the data for all real-valued columns.\n","pos":12,"type":"cell"}
{"cell_type":"markdown","id":"63843c","input":"\n### RTFM \n\nThis time we have to read the documentation to understand the meaning of the columns.\n\n\nHere's how the columns acquire meaning for our data...\n\n    1) ID number\n    2) Diagnosis (M = malignant, B = benign)\n    3-32)\n\nTen real-valued features are computed for each cell nucleus:\n\n\ta) radius (mean of distances from center to points on the perimeter)\n\tb) texture (standard deviation of gray-scale values)\n\tc) perimeter\n\td) area\n\te) smoothness (local variation in radius lengths)\n\tf) compactness (perimeter^2 / area - 1.0)\n\tg) concavity (severity of concave portions of the contour)\n\th) concave points (number of concave portions of the contour)\n\ti) symmetry \n\tj) fractal dimension (\"coastline approximation\" - 1)\n    \nThe mean, standard error, and \"worst\" or largest (mean of the three\nlargest values) of these features were computed for each image,\nresulting in 30 features.  For instance, field 3 is Mean Radius, field\n13 is Radius SE, field 23 is Worst Radius.\n","pos":16,"type":"cell"}
{"cell_type":"markdown","id":"8559f1","input":"#  What's a dataframe?\n\nA pandas dataframe is like a numpy array, but with extra features for plotting, nice appearance, indexing, and database type stuff.\n","pos":6,"type":"cell"}
{"cell_type":"markdown","id":"9ec795","input":"### Taking responsibility\n\nNow we add our own column names to the data...\n","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"b4d0e6","input":"# pandas\n\nThe pandas module is a sophisticated suite of tools for working with data.\n\nIt was created by Wes McKinney and is described at length in his book _Python for Data Analysis_ by O'Reilly Publishing.\n\nWe will perform some basic data science tasks with pandas below and take a tour of its features.\n\nHere is a useful resource:\n\n[ https://jakevdp.github.io/PythonDataScienceHandbook/index.html]( https://jakevdp.github.io/PythonDataScienceHandbook/index.html)\n                                                           ","pos":0,"type":"cell"}
{"cell_type":"markdown","id":"b85a84","input":"### A real dataset\n\nWe will use this dataset from the UCI ML Repo:\n\nhttps://archive.ics.uci.edu/ml/datasets/Hepatitis+C+Virus+%28HCV%29+for+Egyptian+patients\n\nYou can use `curl` to import data directly into Cocalc (or on to any machine).\n\nhttps://www.tutorialspoint.com/unix_commands/curl.htm\n","pos":2,"type":"cell"}
{"cell_type":"markdown","id":"bd4ea8","input":"# Column names\nPandas assumes that the first line of a csv file is the names for the columns.\n\nThis is true for our file.","pos":8,"type":"cell"}
{"cell_type":"markdown","id":"d13d81","input":"# Seaborn Visualization\n\nBelow we show by example how to make a few plots of the data.\n\nThere are *many* other possible visualizations.\n\nMostly we show examine the probability distributions for the various columns.\n\nAt the end we look at the joint probability distribution of a pair of columns.\n","pos":26,"type":"cell"}
{"cell_type":"markdown","id":"f40524","input":"### Some light DB capability\n\nPandas has some significant ability to do DB actions on the data such as column selection.\n\nThe basic syntax for selecting a subset of columns is\n\n```\ndf[[col1,col2,...,coln]]\n```\n\nwhere `[col1,col2,...,coln]` is a list of column names.\n\n\nWe can also select only certain rows based on conditions.\n\nThe syntax for this is a little awkward:\n\n```\ndf[df[col] meets condition]\n```\n\n","pos":21,"type":"cell"}
{"cell_type":"markdown","id":"fcf524","input":"### Column datatypes\n\nEach column has an associated datatype that applies to all entries in the column.\n\nThis particular data only includes ints and floats.  Other datatypes like strings and dates are possible.\n","pos":10,"type":"cell"}
{"id":0,"time":1587059649578,"type":"user"}
{"last_load":1587059432868,"type":"file"}