{"backend_state":"running","kernel":"python3","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":83603456},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.5"}},"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"759c76","input":"","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b56475","input":"","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"5b79b7","input":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\n\ndf = pd.read_excel(\"Concrete_Data.xls\")\ndf.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Cement (component 1)(kg in a m^3 mixture)</th>\n      <th>Blast Furnace Slag (component 2)(kg in a m^3 mixture)</th>\n      <th>Fly Ash (component 3)(kg in a m^3 mixture)</th>\n      <th>Water  (component 4)(kg in a m^3 mixture)</th>\n      <th>Superplasticizer (component 5)(kg in a m^3 mixture)</th>\n      <th>Coarse Aggregate  (component 6)(kg in a m^3 mixture)</th>\n      <th>Fine Aggregate (component 7)(kg in a m^3 mixture)</th>\n      <th>Age (day)</th>\n      <th>Concrete compressive strength(MPa, megapascals)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>540.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>162.0</td>\n      <td>2.5</td>\n      <td>1040.0</td>\n      <td>676.0</td>\n      <td>28</td>\n      <td>79.986111</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>540.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>162.0</td>\n      <td>2.5</td>\n      <td>1055.0</td>\n      <td>676.0</td>\n      <td>28</td>\n      <td>61.887366</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>332.5</td>\n      <td>142.5</td>\n      <td>0.0</td>\n      <td>228.0</td>\n      <td>0.0</td>\n      <td>932.0</td>\n      <td>594.0</td>\n      <td>270</td>\n      <td>40.269535</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>332.5</td>\n      <td>142.5</td>\n      <td>0.0</td>\n      <td>228.0</td>\n      <td>0.0</td>\n      <td>932.0</td>\n      <td>594.0</td>\n      <td>365</td>\n      <td>41.052780</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>198.6</td>\n      <td>132.4</td>\n      <td>0.0</td>\n      <td>192.0</td>\n      <td>0.0</td>\n      <td>978.4</td>\n      <td>825.5</td>\n      <td>360</td>\n      <td>44.296075</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"   Cement (component 1)(kg in a m^3 mixture)  \\\n0                                      540.0   \n1                                      540.0   \n2                                      332.5   \n3                                      332.5   \n4                                      198.6   \n\n   Blast Furnace Slag (component 2)(kg in a m^3 mixture)  \\\n0                                                0.0       \n1                                                0.0       \n2                                              142.5       \n3                                              142.5       \n4                                              132.4       \n\n   Fly Ash (component 3)(kg in a m^3 mixture)  \\\n0                                         0.0   \n1                                         0.0   \n2                                         0.0   \n3                                         0.0   \n4                                         0.0   \n\n   Water  (component 4)(kg in a m^3 mixture)  \\\n0                                      162.0   \n1                                      162.0   \n2                                      228.0   \n3                                      228.0   \n4                                      192.0   \n\n   Superplasticizer (component 5)(kg in a m^3 mixture)  \\\n0                                                2.5     \n1                                                2.5     \n2                                                0.0     \n3                                                0.0     \n4                                                0.0     \n\n   Coarse Aggregate  (component 6)(kg in a m^3 mixture)  \\\n0                                             1040.0      \n1                                             1055.0      \n2                                              932.0      \n3                                              932.0      \n4                                              978.4      \n\n   Fine Aggregate (component 7)(kg in a m^3 mixture)  Age (day)  \\\n0                                              676.0         28   \n1                                              676.0         28   \n2                                              594.0        270   \n3                                              594.0        365   \n4                                              825.5        360   \n\n   Concrete compressive strength(MPa, megapascals)   \n0                                         79.986111  \n1                                         61.887366  \n2                                         40.269535  \n3                                         41.052780  \n4                                         44.296075  "},"exec_count":1,"output_type":"execute_result"}},"pos":1,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"bfbc87","input":"## Change the column numbers to see different pair plots.\n\nplt.scatter(df[df.columns[7]],df[df.columns[-1]])\nplt.show()","output":{"0":{"data":{"image/png":"2aa9d56a3ddb919657acabcf99112ee847fb04cd","text/plain":"<Figure size 432x288 with 1 Axes>"},"exec_count":10,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"ec1b94","input":"df.describe()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Cement (component 1)(kg in a m^3 mixture)</th>\n      <th>Blast Furnace Slag (component 2)(kg in a m^3 mixture)</th>\n      <th>Fly Ash (component 3)(kg in a m^3 mixture)</th>\n      <th>Water  (component 4)(kg in a m^3 mixture)</th>\n      <th>Superplasticizer (component 5)(kg in a m^3 mixture)</th>\n      <th>Coarse Aggregate  (component 6)(kg in a m^3 mixture)</th>\n      <th>Fine Aggregate (component 7)(kg in a m^3 mixture)</th>\n      <th>Age (day)</th>\n      <th>Concrete compressive strength(MPa, megapascals)</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>1030.000000</td>\n      <td>1030.000000</td>\n      <td>1030.000000</td>\n      <td>1030.000000</td>\n      <td>1030.000000</td>\n      <td>1030.000000</td>\n      <td>1030.000000</td>\n      <td>1030.000000</td>\n      <td>1030.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>281.165631</td>\n      <td>73.895485</td>\n      <td>54.187136</td>\n      <td>181.566359</td>\n      <td>6.203112</td>\n      <td>972.918592</td>\n      <td>773.578883</td>\n      <td>45.662136</td>\n      <td>35.817836</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>104.507142</td>\n      <td>86.279104</td>\n      <td>63.996469</td>\n      <td>21.355567</td>\n      <td>5.973492</td>\n      <td>77.753818</td>\n      <td>80.175427</td>\n      <td>63.169912</td>\n      <td>16.705679</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>102.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>121.750000</td>\n      <td>0.000000</td>\n      <td>801.000000</td>\n      <td>594.000000</td>\n      <td>1.000000</td>\n      <td>2.331808</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>192.375000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>164.900000</td>\n      <td>0.000000</td>\n      <td>932.000000</td>\n      <td>730.950000</td>\n      <td>7.000000</td>\n      <td>23.707115</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>272.900000</td>\n      <td>22.000000</td>\n      <td>0.000000</td>\n      <td>185.000000</td>\n      <td>6.350000</td>\n      <td>968.000000</td>\n      <td>779.510000</td>\n      <td>28.000000</td>\n      <td>34.442774</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>350.000000</td>\n      <td>142.950000</td>\n      <td>118.270000</td>\n      <td>192.000000</td>\n      <td>10.160000</td>\n      <td>1029.400000</td>\n      <td>824.000000</td>\n      <td>56.000000</td>\n      <td>46.136287</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>540.000000</td>\n      <td>359.400000</td>\n      <td>200.100000</td>\n      <td>247.000000</td>\n      <td>32.200000</td>\n      <td>1145.000000</td>\n      <td>992.600000</td>\n      <td>365.000000</td>\n      <td>82.599225</td>\n    </tr>\n  </tbody>\n</table>\n</div>","text/plain":"       Cement (component 1)(kg in a m^3 mixture)  \\\ncount                                1030.000000   \nmean                                  281.165631   \nstd                                   104.507142   \nmin                                   102.000000   \n25%                                   192.375000   \n50%                                   272.900000   \n75%                                   350.000000   \nmax                                   540.000000   \n\n       Blast Furnace Slag (component 2)(kg in a m^3 mixture)  \\\ncount                                        1030.000000       \nmean                                           73.895485       \nstd                                            86.279104       \nmin                                             0.000000       \n25%                                             0.000000       \n50%                                            22.000000       \n75%                                           142.950000       \nmax                                           359.400000       \n\n       Fly Ash (component 3)(kg in a m^3 mixture)  \\\ncount                                 1030.000000   \nmean                                    54.187136   \nstd                                     63.996469   \nmin                                      0.000000   \n25%                                      0.000000   \n50%                                      0.000000   \n75%                                    118.270000   \nmax                                    200.100000   \n\n       Water  (component 4)(kg in a m^3 mixture)  \\\ncount                                1030.000000   \nmean                                  181.566359   \nstd                                    21.355567   \nmin                                   121.750000   \n25%                                   164.900000   \n50%                                   185.000000   \n75%                                   192.000000   \nmax                                   247.000000   \n\n       Superplasticizer (component 5)(kg in a m^3 mixture)  \\\ncount                                        1030.000000     \nmean                                            6.203112     \nstd                                             5.973492     \nmin                                             0.000000     \n25%                                             0.000000     \n50%                                             6.350000     \n75%                                            10.160000     \nmax                                            32.200000     \n\n       Coarse Aggregate  (component 6)(kg in a m^3 mixture)  \\\ncount                                        1030.000000      \nmean                                          972.918592      \nstd                                            77.753818      \nmin                                           801.000000      \n25%                                           932.000000      \n50%                                           968.000000      \n75%                                          1029.400000      \nmax                                          1145.000000      \n\n       Fine Aggregate (component 7)(kg in a m^3 mixture)    Age (day)  \\\ncount                                        1030.000000  1030.000000   \nmean                                          773.578883    45.662136   \nstd                                            80.175427    63.169912   \nmin                                           594.000000     1.000000   \n25%                                           730.950000     7.000000   \n50%                                           779.510000    28.000000   \n75%                                           824.000000    56.000000   \nmax                                           992.600000   365.000000   \n\n       Concrete compressive strength(MPa, megapascals)   \ncount                                       1030.000000  \nmean                                          35.817836  \nstd                                           16.705679  \nmin                                            2.331808  \n25%                                           23.707115  \n50%                                           34.442774  \n75%                                           46.136287  \nmax                                           82.599225  "},"exec_count":2,"output_type":"execute_result"}},"pos":2,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"c36434","input":"## Scale data and get train-test split\n\nfrom sklearn.preprocessing import MinMaxScaler  #***\nfrom sklearn.model_selection import train_test_split\n\nX = df.values[:,:-1]\ny = df.values[:,-1]\n\nX_train,X_test,y_train,y_test = train_test_split(X,y)\n\nscaler = MinMaxScaler() #***\nscaler.fit(X_train)     #***\nX_train = scaler.transform(X_train) #***\nX_test = scaler.transform(X_test)   #***\nX_train.shape,X_test.shape","output":{"0":{"data":{"text/plain":"((772, 8), (258, 8))"},"exec_count":4,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"3902cc","input":"## Transform the data to get polynomial features \n\nfrom sklearn.preprocessing import PolynomialFeatures\npoly2 = PolynomialFeatures(2)\nX_train_poly = poly2.fit_transform(X_train)\nX_test_poly = poly2.fit_transform(X_test)\nX_train_poly.shape","output":{"0":{"data":{"text/plain":"(772, 45)"},"exec_count":5,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"818708","input":"from sklearn.metrics import r2_score\nw = np.linalg.pinv(X_train_poly).dot(y_train)\nyhat = X_test_poly.dot(w)\n\npoly_score_train = r2_score(X_train_poly.dot(w),y_train)\npoly_score_test = r2_score(yhat,y_test)\nprint(\"Performance of polynomial model:\")\npoly_score_train,poly_score_test","output":{"0":{"name":"stdout","output_type":"stream","text":"Performance of polynomial model:\n"},"1":{"data":{"text/plain":"(0.7749531696791336, 0.7128962236434888)"},"exec_count":6,"output_type":"execute_result"}},"pos":6,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"b3147c","input":"w = np.linalg.pinv(X_train).dot(y_train)\nyhat = X_test.dot(w)\n\nscore_train = r2_score(X_train.dot(w),y_train)\nscore_test = r2_score(yhat,y_test)\nprint(\"Performance of linear (in X) model:\")\nscore_train,score_test","output":{"0":{"name":"stdout","output_type":"stream","text":"Performance of linear (in X) model:\n"},"1":{"data":{"text/plain":"(0.39841649353305697, 0.42167820502816744)"},"exec_count":7,"output_type":"execute_result"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"edfad5","input":"from sklearn.ensemble import RandomForestRegressor\nregr = RandomForestRegressor()\nregr.fit(X_train,y_train)\nprint(\"Performance of random forest:\")\nregr.score(X_test,y_test)","output":{"0":{"name":"stdout","output_type":"stream","text":"Performance of random forest:\n"},"1":{"data":{"text/plain":"0.9100008845863149"},"exec_count":9,"output_type":"execute_result"}},"pos":8,"type":"cell"}
{"cell_type":"markdown","id":"f35b7a","input":"### Adding polynomial features\n\nThis worksheet shows how adding polynomial features can improve performance.\n\nWe use this dataset:\n\nhttps://archive.ics.uci.edu/ml/datasets/Concrete+Compressive+Strength\n","pos":0,"type":"cell"}
{"id":0,"time":1585315864863,"type":"user"}
{"last_load":1585315865303,"type":"file"}